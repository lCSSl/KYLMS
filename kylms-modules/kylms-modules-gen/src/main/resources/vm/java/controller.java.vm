package ${packageName}.controller;

import java.util.List;
import java.io.IOException;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.I${ClassName}Service;
import ${basePackage}.common.log.annotation.Log;
import ${basePackage}.common.log.enums.BusinessType;
import ${basePackage}.common.security.annotation.PreAuthorize;
import ${basePackage}.common.core.web.controller.BaseController;
import ${basePackage}.common.core.web.domain.AjaxResult;
import ${basePackage}.common.core.utils.poi.ExcelUtil;
#if($table.crud || $table.sub)
import ${basePackage}.common.core.web.page.TableDataInfo;
#elseif($table.tree)
#end

/**
 * ${functionName}Controller
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${businessName}")
public class ${ClassName}Controller extends BaseController {
    @Autowired
    private I${ClassName}Service ${className}Service;

/**
 * 查询${functionName}列表
 */
@PreAuthorize(hasPermi = "${permissionPrefix}:list")
@GetMapping("/list")
    #if($table.crud || $table.sub)
    public TableDataInfo list(${ClassName} ${className}) {
        startPage();
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return getDataTable(list);
    }
    #elseif($table.tree)
        public AjaxResult list(${ClassName} ${className}) {
            List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
            return AjaxResult.success(list);
        }
    #end

    /**
     * 导出${functionName}列表
     */
    @PreAuthorize(hasPermi = "${permissionPrefix}:export")
    @Log(title = "${functionName}", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(HttpServletResponse response, ${ClassName} ${className}) throws IOException {
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        ExcelUtil<${ClassName}> util = new ExcelUtil<${ClassName}>(${ClassName}. class);
        util.exportExcel(response, list, "${businessName}");
    }

    /**
     * 获取${functionName}详细信息
     */
    @PreAuthorize(hasPermi = "${permissionPrefix}:query")
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public AjaxResult getInfo(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        return AjaxResult.success(${className}Service.getById(${pkColumn.javaField}));
    }

    /**
     * 新增${functionName}
     */
    @PreAuthorize(hasPermi = "${permissionPrefix}:add")
    @Log(title = "${functionName}", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody ${ClassName} ${className}) {
        return toAjax(${className}Service.save(${className}) ? 1 : 0);
    }

    /**
     * 修改${functionName}
     */
    @PreAuthorize(hasPermi = "${permissionPrefix}:edit")
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody ${ClassName} ${className}) {
        return toAjax(${className}Service.saveOrUpdate(${className}) ? 1 : 0);
    }

    /**
     * 删除${functionName}
     */
    @PreAuthorize(hasPermi = "${permissionPrefix}:remove")
    @Log(title = "${functionName}", businessType = BusinessType.DELETE)
    @DeleteMapping("/{${pkColumn.javaField}s}")
    public AjaxResult remove(@PathVariable List<${pkColumn.javaType}> ${pkColumn.javaField}s) {
        return toAjax(${className}Service.removeByIds(${pkColumn.javaField}s) ? 1 : 0);
    }
}
